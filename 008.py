#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
    PROBLEM 8
    ---------
    Find the greatest product of five consecutive digits in the 1000-digit
    number.

    7316717653133062491922511967442657474235534919493496983520312774506326239578
    3180169848018694788518438586156078911294949545950173795833195285320880551112
    5406987471585238630507156932909632952274430435576689664895044524452316173185
    6403098711121722383113622298934233803081353362766142828064444866452387493035
    8907296290491560440772390713810515859307960866701724271218839987979087922749
    2190169972088809377665727333001053367881220235421809751254540594752243525849
    0771167055601360483958644670632441572215539753697817977846174064955149290862
    5693219784686224828397224137565705605749026140797296865241453510047482166370
    4844031998900088952434506585412275886668811642717147992444292823086346567481
    3919123162824586178664583591245665294765456828489128831426076900422421902267
    1055626321111109370544217506941658960408071984038509624554443629812309878799
    2724428490918884580156166097919133875499200524063689912560717606058861164671
    0940507754100225698315520005593572972571636269561882670428252483600823257530
    420752963450

    Copyright (c) Project Euler
    See: http://projecteuler.net/copyright

    SOLUTION
    --------
    40824

    Copyright (c) 2012, T. Zengerink
    See: https://raw.github.com/Mytho/project-euler-python/master/LISENCE
"""
from profiler import Profiler


def product(l):
    """Get the product of the items in an iterable."""
    t = 1
    for i in l:
        t *= int(i)
    return t


def product_list(n, length):
    """
    Get a list of products for a given string. Each product being produced by
    muliplying a given length of items.
    """
    l = []
    for i in range(0, len(n)):
        l.append(product(n[i:i + length]))
    return l


if __name__ == "__main__":
    number = (
        "73167176531330624919225119674426574742355349194934969835203127745063" +
        "26239578318016984801869478851843858615607891129494954595017379583319" +
        "52853208805511125406987471585238630507156932909632952274430435576689" +
        "66489504452445231617318564030987111217223831136222989342338030813533" +
        "62766142828064444866452387493035890729629049156044077239071381051585" +
        "93079608667017242712188399879790879227492190169972088809377665727333" +
        "00105336788122023542180975125454059475224352584907711670556013604839" +
        "58644670632441572215539753697817977846174064955149290862569321978468" +
        "62248283972241375657056057490261407972968652414535100474821663704844" +
        "03199890008895243450658541227588666881164271714799244429282308634656" +
        "74813919123162824586178664583591245665294765456828489128831426076900" +
        "42242190226710556263211111093705442175069416589604080719840385096245" +
        "54443629812309878799272442849091888458015616609791913387549920052406" +
        "36899125607176060588611646710940507754100225698315520005593572972571" +
        "636269561882670428252483600823257530420752963450")
    print(max(product_list(number, 5)))
    Profiler.report()
