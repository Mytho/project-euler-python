#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
    PROBLEM 2
    ---------
    Each new term in the Fibonacci sequence is generated by adding the previous
    two terms. By starting with 1 and 2, the first 10 terms will be:
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not
    exceed four million, find the sum of the even-valued terms.

    Copyright (c) Project Euler
    See: http://projecteuler.net/copyright

    SOLUTION
    --------
    4613732

    Copyright (c) 2012, T. Zengerink
    See: https://raw.github.com/Mytho/project-euler-python/master/LISENCE
"""
from profiler import Profiler


def sum_even_fibonacci_up_to(n):
    """Sum all even numbers in the fibonacci sequence up to a number."""
    i, y, total = 1, 2, 0
    while y < n:
        if not y % 2:
            total += y
        i, y = y, i + y
    return total


if __name__ == "__main__":
    print(sum_even_fibonacci_up_to(4000000))
    Profiler.report()
